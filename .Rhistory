angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 20 Genes with ICU and Sex Annotations"
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 15
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 20 Genes with ICU and Sex Annotations"
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 18
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 20 Genes with ICU and Sex Annotations"
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 17
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 20 Genes with ICU and Sex Annotations"
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 16
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 20 Genes with ICU and Sex Annotations"
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 16
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 16 Genes with ICU and Sex Annotations"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(pheatmap)
library(grid)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 16
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 16 Genes with ICU and Sex Annotations"
)
grid.text(
"Heatmap of 16 Genes with ICU and Sex Annotations",
x = 0.5, y = 0.97, gp = gpar(fontsize = 16, fontface = "bold")
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 16
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
)
grid.text(
"Heatmap of 16 Genes with ICU and Sex Annotations",
x = 0.5, y = 0.97, gp = gpar(fontsize = 16, fontface = "bold")
)
# Convert gene expression data into a numeric matrix
mat <- as.matrix(gene_data)
# Find overlapping participant IDs between gene expression and metadata
common <- intersect(colnames(mat), series$participant_id)
# Keep only common participants in the gene expression matrix
mat <- mat[, common, drop = FALSE]
# Subset metadata for the same participants and align the order
series_sub <- series %>% filter(participant_id %in% common) %>%
arrange(match(participant_id, colnames(mat)))
# Log2-transform the expression values to stabilize variance
mat_log <- log2(mat + 1)
# Select the top 20 most variable genes across samples
topN <- 16
top_idx <- order(apply(mat_log, 1, var, na.rm = TRUE), decreasing = TRUE)[1:topN]
sub <- mat_log[top_idx, , drop = FALSE]
# Clean up metadata variables: sex and ICU status
sex_clean <- trimws(series_sub$sex)
icu_raw   <- trimws(series_sub$icu_status)
# Convert ICU status to binary factor
icu_clean <- ifelse(tolower(icu_raw) == "yes", "ICU", "NonICU")
# Convert sex into male/female categories
sex_clean <- ifelse(grepl("^f", tolower(sex_clean)), "Female", "Male")
# Prepare annotation dataframe for heatmap
annotationData <- data.frame(
Sex = factor(sex_clean, levels = c("Female","Male")),
ICU = factor(icu_clean, levels = c("ICU","NonICU")),
row.names = series_sub$participant_id
)
# Define color scheme for annotations
annotationColors <- list(
Sex = c(Female = "#E377C2", Male = "#1F77B4"),
ICU = c(ICU = "#D62728", NonICU = "#2CA02C")
)
# Randomly select 25 samples for visualization
set.seed(100)
subset_cols <- sample(colnames(sub), 30)
sub25 <- sub[, subset_cols, drop = FALSE]
ann25 <- annotationData[subset_cols, , drop = FALSE]
# Shorten column labels for readability (keep ID, sex, and ICU status)
short_labels <- ifelse(
grepl("^COVID", colnames(sub25)),
sub("^COVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"\\1_\\2_\\3", colnames(sub25)),
sub("^NONCOVID_(\\d+)_\\d+y_([^_]+)_(ICU|NonICU)$",
"N\\1_\\2_\\3", colnames(sub25))
)
# Draw heatmap of top variable genes with sample annotations
pheatmap(
sub25,
scale = "row",                          # scale genes across samples
clustering_distance_cols = "euclidean", # distance metric for columns
clustering_distance_rows = "euclidean", # distance metric for rows
clustering_method = "complete",         # hierarchical clustering method
annotation_col = ann25,                 # add sample metadata as annotation
annotation_colors = annotationColors,   # use predefined colors
show_colnames = TRUE,                   # display sample labels
labels_col = short_labels,              # use shortened labels
fontsize_col = 7,                       # font size for column labels
angle_col = 45,                         # rotate labels for clarity
fontsize_row = 7,                       # font size for row labels
main = "Heatmap of 16 Genes with ICU and Sex Annotations"
)
